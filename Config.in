################################################################################
# SPDX-License-Identifier: LGPL-3.0-only
#
# This file is part of Stroll.
# Copyright (C) 2017-2023 Gr√©gor Boirie <gregor.boirie@free.fr>
################################################################################

config STROLL_PROVIDES_LIBS
       bool
       default n

config STROLL_ASSERT
	bool "Assertion"
	select STROLL_PROVIDES_LIBS
	default n
	help
	  Build stroll library assertion framework exposing a programmatic
	  assertion API for use by client code. See <stroll/assert.h>.

config STROLL_ASSERT_API
	bool "API assertion"
	select STROLL_ASSERT
	default n
	help
	  Build stroll library with high-level API assertions enabled to ensure
	  that API functions exposed by Stroll will perform full verification of
	  arguments consistency.

config STROLL_ASSERT_INTERN
	bool "Internal assertion"
	select STROLL_ASSERT_API
	default n
	help
	  Build stroll library with internal assertions enabled to check for
	  internal Stroll behavioral consistency.

config STROLL_UTEST
	bool "Unit tests"
	default n
	help
	  Build stroll library unit test suite.

config STROLL_VALGRIND
	bool "Valgrind support"
	depends on STROLL_UTEST
	default n
	help
	  Build stroll library unit test suite with Valgrind support enabled.
	  For debugging purposes only: do not use in production.

config STROLL_PTEST
	bool "Performance tests"
	default n
	help
	  Build stroll library performance test suite.

config STROLL_BOPS
	bool "Bit operations"
	default y
	help
	  Build stroll library bit operations framework exposing functions to
	  perform bitwise operations upon words in memory such as:
	  * find first bit set,
	  * find first bit cleared,
	  * find last bit set,
	  * compute hamming weight,
	  * etc...
	  See <stroll/bops.h>.

config STROLL_POW2
	bool "Power of 2 operations"
	default y
	select STROLL_BOPS
	select STROLL_PROVIDES_LIBS
	help
	  Build stroll library basic power of 2 operations framework exposing
	  functions to find closes lower / upper power of 2 of a word.
	  See <stroll/pow2.h>.

config STROLL_BMAP
	bool "Bitmap"
	default y
	select STROLL_BOPS
	help
	  Build stroll library with bitmap framework exposing functions to
	  perform usual operations over bitmaps stored into memory words such
	  as:
	  - and / or / xor operations,
	  - test bit / mask / bit range,
	  - hamming weight,
	  - iteration,
	  - etc...
	  See <stroll/bmap.h>.

config STROLL_FBMAP
	bool "Fixed sized bitmap"
	default y
	select STROLL_BOPS
	select STROLL_PROVIDES_LIBS
	help
	  Build stroll library with a bitmap framework allowing to manipulate
	  bitmaps stored into memory area of arbitrary fixed sizes.
	  Multiple functions are exposed to perform usual operations such as:
	  - test bit / mask / bit range,
	  - hamming weight,
	  - iteration,
	  - etc...
	  See <stroll/fbmap.h>.

config STROLL_LVSTR
	bool "Length-Value String"
	select STROLL_PROVIDES_LIBS
	default y
	help
	  Build stroll library with length-value string framework meant to ease
	  the life-cycle of C strings.
	  See <stroll/lvstr.h>.

menuconfig STROLL_HEAP
	bool "Heaps"
	select STROLL_PROVIDES_LIBS
	default y

if STROLL_HEAP

config STROLL_FBHEAP
	bool "Binary heap"
	default STROLL_HEAP
	help
	  Document me!

config STROLL_FWHEAP
	bool "Weak heap"
	default STROLL_HEAP
	help
	  Document me!

endif # STROLL_HEAP

menuconfig STROLL_ARRAY
	bool "Array based algorithms"
	select STROLL_PROVIDES_LIBS
	default y

if STROLL_ARRAY

config STROLL_ARRAY_BISECT_SEARCH
	bool "Bisection / dichotomic search"
	select STROLL_PROVIDES_LIBS
	default y
	help
	  Build stroll library with support for bisection / dichotomic search
	  within pre-sorted arrays.
	  See <stroll/array.h>.

config STROLL_ARRAY_BUBBLE_SORT
	bool "Bubble sort"
	select STROLL_PROVIDES_LIBS
	default n
	help
	  Build stroll library with support for the bubble sort algorithm.
	  Implemented for reference only: **DO NOT USE IT**.

config STROLL_ARRAY_SELECT_SORT
	bool "Selection sort"
	select STROLL_PROVIDES_LIBS
	default n
	help
	  Build stroll library with support for the selection sort algorithm.
	  Implemented for reference only: **DO NOT USE IT**.

config STROLL_ARRAY_INSERT_SORT
	bool "Insertion sort"
	select STROLL_PROVIDES_LIBS
	default y
	help
	  Build stroll library with support for the insertion sort algorithm.
	  See <stroll/array.h>.

config STROLL_ARRAY_QUICK_SORT_UTILS
	bool
	select STROLL_PROVIDES_LIBS
	default n

config STROLL_ARRAY_QUICK_SORT
	bool "Quick sort"
	select STROLL_ARRAY_QUICK_SORT_UTILS
	select STROLL_ARRAY_INSERT
	default y
	help
	  Build stroll library with support for an optimized hybrid version of
	  the quick sort algorithm.
	  See <stroll/array.h>.

config STROLL_ARRAY_QUICK_SORT_INSERT_THRESHOLD
	int "Quick sort insertion threshold"
	depends on STROLL_ARRAY_QUICK_SORT
	range 2 128
	default 16
	help
	  Threshold that configures the switch of quick sort to insertion sort.
	  For each partition, when the number of elements left to sort is below
	  this threshold, quick sort will switch to insertion sort to minimize
	  the number of element swap operations.

config STROLL_ARRAY_3WQUICK_SORT
	bool "3-way quick sort"
	select STROLL_ARRAY_QUICK_SORT_UTILS
	select STROLL_ARRAY_INSERT
	default y
	help
	  Build stroll library with support for an optimized hybrid version of
	  the 3-way partition quick sort algorithm optimized for inputs
	  containing many duplicate elements.
	  See <stroll/array.h>.

config STROLL_ARRAY_3WQUICK_SORT_INSERT_THRESHOLD
	int "3-way quick sort insertion threshold"
	depends on STROLL_ARRAY_3WQUICK_SORT
	range 2 128
	default 8
	help
	  Threshold that configures the switch of 3-way quick sort to insertion
	  sort.
	  For each partition, when the number of elements left to sort is below
	  this threshold, quick sort will switch to insertion sort to minimize
	  the number of element swap operations.

choice
	prompt "3-way quick sort partitioning strategy"
	depends on STROLL_ARRAY_3WQUICK_SORT
	default STROLL_ARRAY_3WQUICK_SORT_BENTLEY_MCILROY
	help
	  Select the default partitioning strategy used for 3-way quick
	  sort algorithm.

config STROLL_ARRAY_3WQUICK_SORT_DIJKSTRA
	bool "Dijkstra"
	depends on STROLL_ARRAY_3WQUICK_SORT
	help
	  Dijkstra's 3-way partitioning logic based upon the
	  "Dutch National Flag" problem. It enhances quick sort performances for
	  inputs where there are small number of distinct values. However, as
	  it exhibits poor locality of references and performs more swaps than
	  necessary, it is not suitable for inputs containing moderate to large
	  number of distinct key values.
	  Prefer Bentley-McIlroy's scheme instead.

config STROLL_ARRAY_3WQUICK_SORT_BENTLEY_MCILROY
	bool "Bentley-McIlroy"
	depends on STROLL_ARRAY_3WQUICK_SORT
	help
	  Bentley-McIlroy's 3-way partitioning logic, also known as
	  "fast partitioning", is an improvement over Dijkstra's scheme
	  since it limits the extra overhead required to process keys equal to
	  pivot.
	  It is a suitable alternative to the standard 2-way partitioning logic
	  when inputs contain a small number of distinct key values.

endchoice

config STROLL_ARRAY_MERGE_SORT
	bool "Merge sort"
	select STROLL_ARRAY_INSERT
	default y
	help
	  Build stroll library with support for an optimized hybrid version of
	  the merge sort algorithm.
	  See <stroll/array.h>.

config STROLL_ARRAY_MERGE_SORT_INSERT_THRESHOLD
	int "Merge sort insertion threshold"
	depends on STROLL_ARRAY_MERGE_SORT
	range 2 128
	default 8
	help
	  Threshold that configures the switch of merge sort to insertion sort.
	  For each partition, when the number of elements left to sort is below
	  this threshold, merge sort will switch to insertion sort to minimize
	  the number of element swap operations.

config STROLL_ARRAY_MERGE_SORT_FULL_RUNS
	bool "Merge sort full runs optimization"
	depends on STROLL_ARRAY_MERGE_SORT
	default y
	help
	  This optimization gives merge sort the ability to detect fully ordered
	  partitions in order to skip the usual partitions / sub-arrays merging
	  process at the expense of 2 additional array element comparisons.
	  This may improve performances for partially / fully ordered data sets.

config STROLL_ARRAY_MERGE_SORT_RUNS_BYBLOCK
	bool "Merge sort runs by block optimization"
	depends on STROLL_ARRAY_MERGE_SORT
	default y
	help
	  This optimization gives merge sort the ability to try to merge
	  partitions / sub-arrays by blocks of consecutive ordered elements as
	  opposed to the traditional single element based merging process.
	  This allows to replace multiple primary element copy operations
	  by one single copy of a block of ordered primary elements.
	  This may improve performances for partially / fully ordered data sets.

config STROLL_ARRAY_FBHEAP_SORT
	bool "Binary heap sort"
	default y
	help
	  Document me!

config STROLL_ARRAY_FWHEAP_SORT
	bool "Weak heap sort"
	default y
	help
	  Document me!

endif # STROLL_ARRAY

# ex: ft=kconfig:
